# ===== SMART SEGMENTATION CONFIGURATION =====
# Minimum segment duration in seconds (system will not go below this)
# Lower values = smaller segments but more processing time
# Recommended: 2-5 seconds for high bitrate videos
MIN_SEGMENT_DURATION=2

# Maximum segment duration to start testing with
# Higher values = fewer segments but potentially larger files
# Recommended: 20-30 seconds
MAX_# Telegram Video Streaming System Configuration
# IMPORTANT: Keep this file secure and never commit it to version control

# ===== TELEGRAM CONFIGURATION =====
# Your Telegram Bot Token from @BotFather
BOT_TOKEN=""
# The username of your public Telegram channel (must start with @)
CHAT_ID="@yourpublichannel1"

# Additional bots for round-robin
BOT_TOKEN_2=""
CHAT_ID_2="@yourpublichannel2"

BOT_TOKEN_3=""
CHAT_ID_3="@yourpublichannel3"

BOT_TOKEN_4=""
CHAT_ID_4="@yourpublichannel4"

BOT_TOKEN_5=""
CHAT_ID_5="@yourpublichannel5"

BOT_TOKEN_6=""
CHAT_ID_6="@yourpublichannel6"

BOT_TOKEN_7=""
CHAT_ID_7="@yourpublichannel7"

BOT_TOKEN_8=""
CHAT_ID_8="@yourpublichannel8"

BOT_TOKEN_9=""
CHAT_ID_9="@yourpublichannel9"

BOT_TOKEN_10=""
CHAT_ID_10="@yourpublichannel10"

# ===== NETWORK CONFIGURATION =====
# Local IP address for the server (will auto-detect if not specified)
# Use 0.0.0.0 to bind to all interfaces for network access
LOCAL_HOST="192.168.0.199"

# Port for the local server
LOCAL_PORT=5050

# Public domain for external access (no http/https prefix)
PUBLIC_DOMAIN="example.duckdns.org"

# ===== SSL/HTTPS CONFIGURATION =====
# Set to true if using SSL through reverse proxy (nginx, cloudflare, etc.)
# This will force HTTPS URLs even without direct SSL certificates
FORCE_HTTPS=true

# Path to SSL certificate file (for direct HTTPS support - leave empty if using reverse proxy)
SSL_CERT_PATH=""

# Path to SSL private key file (for direct HTTPS support - leave empty if using reverse proxy)
SSL_KEY_PATH=""

# ===== CACHE CONFIGURATION =====
# Cache type: "memory" or "disk" (memory is faster but lost on restart)
CACHE_TYPE="memory"

# Cache size per connection in bytes (500MB default)
CACHE_SIZE=524288000

# Cache directory path (only used if CACHE_TYPE=disk)
CACHE_DIR="cache"

# ===== CACHE CONFIGURATION =====
# Cache type: "memory" or "disk" (memory is faster but lost on restart)
CACHE_TYPE="memory"

# Cache size per connection in bytes (500MB default)
CACHE_SIZE=524288000

# Cache directory path (only used if CACHE_TYPE=disk)
CACHE_DIR="cache"

# ===== PREDICTIVE CACHING CONFIGURATION =====
# Number of segments to preload ahead of current playback position
# Higher values = smoother playback but more cache usage
# Recommended: 5-15 segments
PRELOAD_SEGMENTS=8

# Maximum concurrent preload operations
# Higher values = faster preloading but more system load
# Recommended: 3-10 concurrent preloads
MAX_CONCURRENT_PRELOADS=5

# Session cleanup interval in seconds (how often to clean up inactive sessions)
# Lower values = more frequent cleanup but more CPU usage
# Recommended: 300-900 seconds (5-15 minutes)
SESSION_CLEANUP_INTERVAL=300

# Session idle timeout in seconds (when to consider a session inactive)
# Lower values = more aggressive cleanup, higher values = better user experience
# Recommended: 600-1800 seconds (10-30 minutes)
SESSION_IDLE_TIMEOUT=600

# Enable predictive cache warming for popular videos after upload
# When enabled, recently uploaded videos will be pre-cached automatically
ENABLE_CACHE_WARMING=true

# Maximum segments to pre-warm for new videos
# Higher values = better immediate playback but more cache usage
# Recommended: 5-20 segments
CACHE_WARMING_SEGMENTS=10

# ===== DATABASE CONFIGURATION =====
# Path to the SQLite database file
DB_PATH="video_streaming.db"

# ===== SERVER CONFIGURATION =====
# Maximum upload file size in bytes (50GB default)
MAX_UPLOAD_SIZE=53687091200

# ===== SMART SEGMENTATION CONFIGURATION =====
# Minimum segment duration in seconds (system will not go below this)
# Lower values = smaller segments but more processing time
# Recommended: 2-5 seconds for high bitrate videos
MIN_SEGMENT_DURATION=2

# Maximum segment duration to start testing with
# Higher values = fewer segments but potentially larger files
# Recommended: 20-30 seconds
MAX_SEGMENT_DURATION=20

# Maximum chunk size for Telegram uploads (CRITICAL: must be â‰¤15MB for bot compatibility)
# The system will target 90% of this value for safety margin
# 15MB = 15728640 bytes (safe for Telegram bots)
MAX_CHUNK_SIZE=15728640

# ===== FFMPEG OPTIMIZATION =====
# Hardware acceleration: "nvidia", "intel", or leave empty for software encoding
# Only use if you have compatible hardware and drivers
FFMPEG_HARDWARE_ACCEL="intel"

# ===== LOGGING CONFIGURATION =====
# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL="INFO"

# Optional log file path (leave empty for console only)
# LOG_FILE="logs/streaming_server.log"
LOG_FILE=""

# ===== DIRECTORY CONFIGURATION =====
# Directory for temporary uploaded files
TEMP_UPLOAD_DIR="temp_uploads"

# Directory for video segments during processing
SEGMENTS_DIR="segments"

# Directory for HLS playlists
PLAYLISTS_DIR="playlists"

# ===== TELEGRAM SIZE LIMITS REFERENCE =====
# Bot Upload Limit: 50MB (theoretical)
# Bot Download Limit: 20MB (REAL CONSTRAINT!)
# User Upload Limit: 2GB (not applicable for bots)
#
# CRITICAL: MAX_CHUNK_SIZE should never exceed 15MB
# Even though Telegram allows 50MB uploads, bots can only download 20MB files
# If a segment is >20MB, it uploads fine but becomes unplayable during streaming
# The 15MB limit ensures segments can be reliably downloaded by the bot API
